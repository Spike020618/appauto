{"task_id": "HumanEval/129", "completion": "def minPath(grid, k):\n    n = len(grid)\n    start_i, start_j = None, None\n    for i in range(n):\n        for j in range(n):\n            if grid[i][j] == 1:\n                start_i, start_j = i, j\n                break\n        if start_i is not None:\n            break\n    path = [1]\n    current_i, current_j = start_i, start_j\n    for _ in range(k-1):\n        neighbors = []\n        directions = [(-1,0), (1,0), (0,-1), (0,1)]\n        for di, dj in directions:\n            ni = current_i + di\n            nj = current_j + dj\n            if 0 <= ni < n and 0 <= nj < n:\n                neighbors.append(grid[ni][nj])\n        min_next = min(neighbors)\n        for di, dj in directions:\n            ni = current_i + di\n            nj = current_j + dj\n            if 0 <= ni < n and 0 <= nj < n:\n                if grid[ni][nj] == min_next:\n                    current_i, current_j = ni, nj\n                    break\n        path.append(min_next)\n    return path", "result": "passed", "passed": true}
{"task_id": "HumanEval/47", "completion": "def median(l: list):\n    s = sorted(l)\n    n = len(s)\n    if n % 2 == 1:\n        return s[n//2]\n    else:\n        return (s[(n//2)-1] + s[n//2]) / 2", "result": "passed", "passed": true}
